{"version":3,"file":"default-src_app_component_top-bar_top-bar_module_ts.js","mappings":"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","sources":["./src/app/component/delete dialog/delete-dialog.component.ts","./src/app/component/delete dialog/delete-dialog.component.html","./src/app/component/top-bar/qr-code/qr-code.dialog.ts","./src/app/component/top-bar/top-bar.component.ts","./src/app/component/top-bar/top-bar.component.html","./src/app/component/top-bar/top-bar.module.ts","./src/app/pages/cml/add-cml/add-cml.component.ts","./src/app/pages/cml/add-cml/add-cml.component.html","./src/app/pages/cml/cml.component.ts","./src/app/pages/cml/cml.component.html","./src/app/pages/cml/cml.servivce.ts","./src/app/pages/dashboard/piping-assets/add-assets/add-assets.component.ts","./src/app/pages/dashboard/piping-assets/add-assets/add-assets.component.html","./src/app/pages/dashboard/piping-assets/piping-assets.component.ts","./src/app/pages/dashboard/piping-assets/piping-assets.component.html","./src/app/pages/dashboard/piping-circuits/add-circuit/add-circuit.component.ts","./src/app/pages/dashboard/piping-circuits/add-circuit/add-circuit.component.html","./src/app/pages/dashboard/piping-circuits/piping-circuits.component.ts","./src/app/pages/dashboard/piping-circuits/piping-circuits.component.html","./src/app/pages/dashboard/piping-circuits/piping-circuits.service.ts","./src/app/pages/dashboard/view-proposal/add-proposal/add-proposal.component.ts","./src/app/pages/dashboard/view-proposal/add-proposal/add-proposal.component.html","./src/app/pages/dashboard/view-proposal/view-proposal.component.ts","./src/app/pages/dashboard/view-proposal/view-proposal.component.html","./src/app/pages/dashboard/view-proposal/view-proposal.service.ts"],"sourcesContent":["import { Component, Input } from \"@angular/core\";\r\nimport { NbDialogRef } from \"@nebular/theme\";\r\n\r\n@Component({\r\n    selector : 'ngx-delete-dialog',\r\n    templateUrl : './delete-dialog.component.html'\r\n})\r\nexport class DeleteDialogComponent {\r\n    constructor(\r\n        private dialog : NbDialogRef<any>,\r\n    ) {}\r\n\r\n    @Input() dialogData;\r\n    closeDialog(arr = null) {\r\n        if(!arr) this.dialog.close();\r\n        if(arr) this.dialog.close(arr);\r\n    }\r\n}","<div class=\"w-100 d-flex justify-content-center mt-5\">\r\n    <nb-card class=\"mt-5\" style=\"max-height: 35rem; min-width: 20rem;\">\r\n        <nb-card-header class=\"d-flex\">\r\n            <h5 class=\"w-100\">Delete</h5>\r\n            <div class=\"flex-shrink-1\">\r\n                <button nbButton status=\"danger\" size=\"tiny\" (click)=\"closeDialog()\">\r\n                    <nb-icon icon=\"close-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>  \r\n            <span class=\"d-flex justify-content-center\">Are you sure to delete this?</span>\r\n            <div class=\"d-flex justify-content-center\">\r\n                <button status=\"success\" size=\"small\" nbButton class=\"m-1\" (click)=\"closeDialog(dialogData)\">Yes</button>\r\n                <button status=\"danger\" size=\"small\" nbButton class=\"m-1\" (click)=\"closeDialog()\">No</button>\r\n            </div>\r\n        </nb-card-body>\r\n\r\n    </nb-card>\r\n</div>","import { Component, OnInit } from \"@angular/core\";\r\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } \r\n        from '@techiediaries/ngx-qrcode';\r\n\r\n@Component({\r\n    selector: 'ngx-qr-code',\r\n    template : `\r\n        <ngx-qrcode\r\n            [elementType]=\"elementType\"\r\n            [errorCorrectionLevel]=\"correctionLevel\"\r\n            [value]=\"value\"\r\n        ></ngx-qrcode>\r\n    `\r\n  })\r\nexport class PrintQRCodeComponent implements OnInit { \r\n    ngOnInit(): void {\r\n        \r\n    }\r\n\r\n    elementType = NgxQrcodeElementTypes.URL;\r\n    correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\r\n    \r\n    // Need to specify the valid website address\r\n    value = 'https://www.google.com/';\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { NbDialogService } from '@nebular/theme';\r\nimport { PrintQRCodeComponent } from './qr-code/qr-code.dialog';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { PipingAssetsComponent } from '../../pages/dashboard/piping-assets/piping-assets.component';\r\nimport { PipingCircuitsComponent } from '../../pages/dashboard/piping-circuits/piping-circuits.component';\r\nimport { ViewProposalComponent } from '../../pages/dashboard/view-proposal/view-proposal.component';\r\nimport { CmlComponent } from '../../pages/cml/cml.component';\r\n\r\n@Component({\r\n  selector: 'ngx-top-bar',\r\n  templateUrl: './top-bar.component.html' ,\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dialogService: NbDialogService,\r\n    private activeRoute : ActivatedRoute,\r\n    private assetComponent : PipingAssetsComponent,\r\n    private circuitComponent : PipingCircuitsComponent,\r\n    private proposalComponent : ViewProposalComponent,\r\n    private cmlComponent : CmlComponent\r\n  ) { }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  addNew() {\r\n    const route : any = this.activeRoute.snapshot.data?.routename \r\n    || this.activeRoute.snapshot.firstChild.data.routename\r\n\r\n    if(route == 'assets')\r\n    this.assetComponent.addAssets()\r\n    \r\n    if(route == 'circuit')\r\n    this.circuitComponent.addCircuit()\r\n\r\n    if(route == 'proposal')\r\n    this.proposalComponent.addProposal()\r\n\r\n    if(route == 'cml')\r\n    this.cmlComponent.addCML();\r\n  }\r\n\r\n  import() {\r\n    console.log('import')\r\n  }\r\n\r\n  export() {\r\n    console.log('export')\r\n  }\r\n\r\n  print() {\r\n    console.log('print')\r\n  }\r\n\r\n  qrPrint() {\r\n    this.dialogService.open(PrintQRCodeComponent);\r\n  }\r\n\r\n}\r\n","<nb-card>\r\n    <nb-card-body>\r\n        <button \r\n            nbButton \r\n            outline\r\n            size=\"small\" \r\n            status=\"primary\"\r\n            class=\"m-2\"\r\n            *ngFor=\"let button of [\r\n                { name : 'New', icon : 'plus-outline' },\r\n                { name : 'Import', icon : 'download-outline' },\r\n                { name : 'Export', icon : 'upload-outline' },\r\n            ]\"\r\n            (click)=\"\r\n                    button.name == 'New'        ? addNew()\r\n                :   button.name == 'Import'     ? import()\r\n                :   button.name == 'Export'     ? export()\r\n                :   button.name == 'Print'      ? print()\r\n                :   button.name == 'QR Print'   ? qrPrint()\r\n                :   null\r\n                    \"\r\n            >\r\n                <nb-icon [icon]=\"button.icon\" [pack]=\"button.pack ?? 'eva' \" class=\"m-1\"></nb-icon>\r\n                <span>{{ button.name }}</span>\r\n            </button>\r\n    </nb-card-body>\r\n</nb-card>","import { CommonModule } from \"@angular/common\";\r\nimport { ThemeModule } from \"../../@theme/theme.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { TopBarComponent } from \"./top-bar.component\";\r\nimport { \r\n    NbButtonModule, \r\n    NbCardModule, \r\n    NbDialogModule, \r\n    NbIconModule\r\n} from \"@nebular/theme\";\r\nimport { NgxQRCodeModule } from \"@techiediaries/ngx-qrcode\";\r\nimport { PrintQRCodeComponent } from \"./qr-code/qr-code.dialog\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ThemeModule,\r\n        NbCardModule,\r\n        NbButtonModule,\r\n        NbIconModule,\r\n        NgxQRCodeModule,\r\n        NbDialogModule.forChild({\r\n            closeOnBackdropClick : true\r\n        })\r\n    ],\r\n    declarations: [\r\n        TopBarComponent,\r\n        PrintQRCodeComponent\r\n    ],\r\n    exports : [\r\n        TopBarComponent\r\n    ]\r\n  })\r\nexport class TopBarModule { }","import { Component, Input } from \"@angular/core\";\r\nimport { NbDialogRef } from \"@nebular/theme\";\r\n\r\n@Component({\r\n    selector : 'ngx-add-cml',\r\n    templateUrl : './add-cml.component.html'\r\n})\r\nexport class AddCMLComponent {\r\n    constructor(\r\n        private dialog : NbDialogRef<any>,\r\n    ) {}\r\n\r\n    @Input() dialogData;\r\n    closeDialog(arr = null) {\r\n        if(!arr) this.dialog.close()\r\n        if(arr) {\r\n            console.log(arr)\r\n            this.dialog.close()\r\n\r\n          // this.assetsService.addPipingAssets(arr)\r\n          // .subscribe(res => console.log(res))\r\n        }\r\n    }\r\n}","<div class=\"w-100 d-flex justify-content-center mt-5\">\r\n    <nb-card class=\"mt-5\" style=\"max-height: 35rem; min-width: 20rem;\">\r\n        <nb-card-header class=\"d-flex\">\r\n            <h5 class=\"w-100\">Add CML</h5>\r\n            <div class=\"flex-shrink-1\">\r\n                <button nbButton status=\"danger\" size=\"tiny\" (click)=\"closeDialog()\">\r\n                    <nb-icon icon=\"close-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>  \r\n            <form #cmlForm=\"ngForm\" (ngSubmit)=\"closeDialog(cmlForm.value)\">\r\n                <div class=\"\">\r\n                    <div>\r\n                        <label for=\"cml_id\" class=\"d-block\">CML ID</label>\r\n                        <input type=\"text\" id=\"cml_id\" \r\n                        nbInput fieldSize=\"small\" \r\n                        ngModel \r\n                        name=\"cml_id\">\r\n                        \r\n                        <label for=\"gauge_point\" class=\"d-block\">Gaguge Point</label>\r\n                        <input type=\"text\" id=\"gauge_point\" \r\n                        nbInput fieldSize=\"small\" \r\n                        ngModel \r\n                        name=\"gauge_point\">\r\n            \r\n                        <label for=\"point_location\" class=\"d-block\">Point Location</label>\r\n                        <input type=\"text\" id=\"point_location\" \r\n                        nbInput fieldSize=\"small\" \r\n                        ngModel name=\"point_location\"> \r\n            \r\n                        <label for=\"nominal_thickness\" class=\"d-block\">Nominal Thickness</label>\r\n                        <input type=\"text\" id=\"nominal_thickness\" \r\n                        nbInput fieldSize=\"small\" \r\n                        ngModel \r\n                        name=\"nominal_thickness\">\r\n            \r\n                        <label for=\"min_required_thickness\" class=\"d-block\">Min. Required Thickness</label>\r\n                        <input type=\"text\" id=\"min_required_thickness\" \r\n                        nbInput fieldSize=\"small\" \r\n                        ngModel \r\n                        name=\"min_required_thickness\">\r\n            \r\n                        <label for=\"last_thickness_reading\" class=\"d-block\">Last Thickness Reading</label>\r\n                        <input type=\"text\" id=\"last_thickness_reading\" \r\n                        nbInput fieldSize=\"small\" \r\n                        ngModel \r\n                        name=\"last_thickness_reading\">\r\n            \r\n                        <label for=\"last_thickness_reading_date\" class=\"d-block\">Last Thickness Reading Date</label>\r\n                        <input type=\"text\" id=\"last_thickness_reading_date\" \r\n                        nbInput fieldSize=\"small\" \r\n                        ngModel name=\"last_thickness_reading_date\">\r\n                    </div>\r\n\r\n                    <button nbButton size=\"small\" status=\"success\" type=\"submit\">Add CML</button>\r\n                </div>\r\n            </form>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>","import { Component, Injectable, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CMLService } from './cml.servivce';\nimport { NbDialogService } from '@nebular/theme';\nimport { AddCMLComponent } from './add-cml/add-cml.component';\n\n@Injectable({\n  providedIn : 'root'\n})\n\n@Component({\n  selector: 'ngx-cml',\n  templateUrl: './cml.component.html',\n})\nexport class CmlComponent implements OnInit {\n\n  constructor(\n    private activatedroute : ActivatedRoute,\n    private cmlService : CMLService,\n    private dialogService : NbDialogService\n  ) { }\n\n  ngOnInit(): void {\n    const piping_id = this.activatedroute.snapshot.paramMap.get('id')\n    this.cmlService.getCMLs()\n    .subscribe(({data} : any) => this.tableData = data)\n    this.tableHeader = { title : `Pipe ${piping_id}`, filter : \"CML Id\" }\n  }\n\n  tableHeader : any;\n  tableData:any[] = []\n  columnDetails = [ \n    { type : 'text', prop : 'cml_id', head : 'CML Id', width : '200px' },\n    { type : 'text', prop : 'gauge_point', head : 'Gauge Point', width : '200px' },\n    { type : 'text', prop : 'point_location', head : 'Point Location', width : '200px' },\n    { type : 'text', prop : 'nominal_thickness', head : 'Nominal Thickness (mm)', width : '200px' },\n    { type : 'text', prop : 'min_required_thickness', head : 'Min. Required Thickness (mm)', width : '200px' },\n    { type : 'text', prop : 'last_thickness_reading', head : 'Last Thickness Reading (mm)', width : '200px' },\n    { type : 'text', prop : 'last_thickness_reading_date', head : 'Last Thickness Date', width : '200px' },\n    { type : 'text', prop : 'calculate_cr', head : 'Calculated CR (mm/Year)', width : '200px' },\n  ]\n\n  inputDetail = [\n    {name : \"Gauge Point\", prop : \"gauge_point\"},\n    {name : \"Point Location\", prop : \"point_location\"},\n  ]\n\n  addCML() {\n    this.dialogService.open(AddCMLComponent, {\n      context: {\n        dialogData : 'hello'\n        // title: 'This is a title passed to the dialog component',\n      },\n    });\n  }\n}\n","<ngx-top-bar></ngx-top-bar>\n\n<ngx-mat-table \n    *ngIf=\"tableData.length\"\n    [tableHeader]=\"tableHeader\"\n    [columnDetails]=\"columnDetails\"\n    [tableData]=\"tableData\"\n></ngx-mat-table>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\nexport class CMLService {\r\n    constructor(private httpClient : HttpClient) { }\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    getCMLs(){\r\n        const url = this.apiUrl + \"/cml\";\r\n        return this.httpClient.get(url);\r\n    }\r\n}","import { Component, Injectable, Input, OnInit } from '@angular/core';\nimport { NbDialogRef, NbDialogService } from '@nebular/theme';\nimport { PipingAssetsService } from '../piping-assets.service';\n\n@Component({\n  selector: 'ngx-add-assets',\n  templateUrl: './add-assets.component.html',\n})\nexport class AddAssetsComponent implements OnInit {\n\n  constructor(\n    private dialog: NbDialogRef<any>,\n  ) { }\n\n  ngOnInit(): void { }\n\n  @Input() dialogData;\n\n  spesificationItem = [\n    { id : 'piping_id', name : \"Piping Id\", unit : 'mm' },\n    { id : 'piping_name', name : \"Piping Name\", unbit : 'mm' },\n    { id : 'nominal_pipe_size', name : \"Nominal Pipe Size\", unit : 'mm' },\n    { id : 'pipe_design_code', name : \"Pipe Design Code\" },\n    { id : 'schedule', name : \"Schedule\", unit : 'mm' },\n    { id : 'outside_diameter', name : \"Outside Diamter\" },\n    { id : 'longtd_quality_factor', name : \"Longtd. Quality Factor (E)\" },\n    { id : 'weld_joint_factor', name : \"Weld Joint Factor (W)\" },\n    { id : 'allowable_unit_stress', name : \"Allowable Unit Stress (S)\", unit : 'psi' },\n    { id : 'coefficient', name : \"Coefficient (Y)\" },\n    { id : 'min_design_pressure', name : \"Min. Design Pressure (P min)\", unit : 'psig' },\n    { id : 'max_design_pressure', name : \"Max. Design Pressure (P max)\", unit : 'psig' },\n    { id : 'min_design_temperature', name : \"Min. Design Temperature (T min)\", unit : 'F' },\n    { id : 'max_design_temperature', name : \"Max Design Temperature (T max)\", unit : 'F' },\n    { id : 'corrosion_allowance', name : \"Corrosion Allowance\", unit : 'mm' },\n    { id : 'mechanical_allowance', name : \"Mechanical Allowances\", unit : 'mm' },\n    { id : 'min_structural_thickness', name : \"Min. Structural Thickness\", unit : 'mm' },\n    { id : 'min_alert_thickness', name : \"Min. Alert Thickness\", unit : 'mm' },\n    { id : 'nominal_thickness', name : \"Nominal Thickness\", unit : 'mm' },\n  ];\n\n  imageLink : any = [\n    // { src : \"https://wallpapercave.com/wp/wp6954364.jpg\", alt : \"Pipe 1\"},\n    // { src : \"https://th.bing.com/th/id/OIP.AYvIW8-BF1Kfk1LvIq2WagAAAA?pid=ImgDet&w=400&h=400&rs=1\", alt : \"Pipe 2\"},\n    // { src : \"https://th.bing.com/th/id/OIP.buLgFymST5kZJoEQjTQVxQHaE7?pid=ImgDet&rs=1\", alt : \"Pipe 3\"},\n  ]\n\n  onFileChange(res) {\n    const file = res.target.files\n    for(let image of file) {\n      var reader = new FileReader()\n      reader.readAsDataURL(image)\n      reader.onload = (event) => {\n        const src = event.target.result\n        this.imageLink.push({src, alt : image.name})\n      }\n    }\n  }\n\n  onImageLoad(){\n    // const formData = new FormData(); \n    // formData.append('dokumen', this.uploadImageUrl);\n    // this.homeService.uploadFile(formData)\n    // .subscribe((res) => {\n    //     if (res.type === HttpEventType.UploadProgress) {\n    //         this.uploadProgress = Math.round(res.loaded / res.total ) * 100 + '%';\n    //     } else \n    //     if ( res.type === HttpEventType.Response){\n    //         this.uploadProgress = 'Upload Success';\n    //         const result : any = res;\n    //         this.uploadImageUrl = result.body.data.file;\n    //     }\n    // })\n  }\n\n  closeDialog(arr = null) {\n    if(!arr) this.dialog.close()\n    if(arr) this.dialog.close(arr)\n  }\n\n}\n","<div class=\"w-100 d-flex justify-content-center mt-5\">\n    <nb-card class=\"mt-5\">\n        <nb-card-header class=\"d-flex\">\n            <h5 class=\"w-100\">{{ dialogData?.title }}</h5>\n            <div class=\"flex-shrink-1\">\n                <button nbButton status=\"danger\" size=\"tiny\" (click)=\"closeDialog()\">\n                    <nb-icon icon=\"close-outline\"></nb-icon>\n                </button>\n            </div>\n        </nb-card-header>\n        <nb-card-body>  \n            \n            <form #addAssetsForm=\"ngForm\" (ngSubmit)=\"closeDialog(addAssetsForm.value)\">\n                \n                <div class=\"row\">\n                    <div class=\"col-8\">\n                        <div class=\"row row-cols-4\">\n                            <div *ngFor=\"let spec of spesificationItem\" class=\"col mb-2\">\n                                <label [for]=\"spec.id\" class=\"d-block\" style=\"font-size: .9rem;\">{{ spec.name }}</label>\n                                <input fieldSize=\"small\" required nbInput type=\"text\" [id]=\"spec.id\"  class=\"col-8\" [name]=\"spec.id\" [ngModel]=\"dialogData?.data?.[spec.id]\">\n                                <span class=\"col\"> {{ spec?.unit }} </span> \n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-4\">\n                        <div id=\"carouselExampleInterval\" class=\"carousel slide\" data-bs-ride=\"carousel\">\n                            <div class=\"carousel-inner\">\n                              <div *ngFor=\"let image of imageLink; let i = index;\" class=\"carousel-item\" [ngClass]=\"i == 0 ? 'active' : ''\" data-bs-interval=\"10000\">\n                                <div class=\"overflow-hidden d-flex align-justify-center\" style=\"height: 13rem;\">\n                                    <img [src]=\"image.src\" class=\"w-100\" [alt]=\"image?.alt\" (click)=\"addImage.click()\" >\n                                </div>\n                              </div>\n                              <label for=\"addImage\">Image</label>\n                              <input  \n                                    placeholder=\"Add image\"\n                                    multiple\n                                    fullWidth \n                                    nbInput \n                                    type=\"file\" \n                                    accept=\"image/png, image/gif, image/jpeg\" \n                                    #addImage \n                                    id=\"addImage\"\n                                    (change)=\"onFileChange($event)\"\n                                >\n                            </div>\n                            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"prev\">\n                              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                              <span class=\"visually-hidden\">Previous</span>\n                            </button>\n                            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"next\">\n                              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                              <span class=\"visually-hidden\">Next</span>\n                            </button>\n                        </div>\n                        \n                        <div class=\"row row-cols-2\">\n                            <div>\n                                <label for=\"dateInService\" class=\"mb-1 d-block\">Date In Service</label>\n                                <input fullWidth \n                                nbInput fieldSize=\"small\" \n                                [nbDatepicker]=\"datepicker\" \n                                name=\"date_in_service\" [ngModel]=\"dialogData?.data?.date_in_service\"\n                                required> \n                                <nb-datepicker #datepicker></nb-datepicker>\n                            </div>\n                            <div>\n                                <label for=\"class\" class=\"mb-1 d-block\">Class</label>\n                                <input \n                                fullWidth \n                                nbInput \n                                fieldSize=\"small\" type=\"text\" id=\"class\" \n                                required\n                                name=\"class\" [ngModel]=\"dialogData?.data?.class\">\n                            </div>\n                            <div>\n                                <label for=\"notes\" class=\"mb-1 d-block\">Notes</label>\n                                <input fullWidth nbInput fieldSize=\"small\" type=\"text\" id=\"notes\" name=\"notes\" [ngModel]=\"dialogData?.data?.notes\">\n                            </div>\n                            <div>\n                                <label for=\"addAttach\" class=\"d-block mb-1\">Attachment</label>\n                                <input \n                                    fullWidth \n                                    fieldSize=\"tiny\"\n                                    nbInput \n                                    type=\"file\" \n                                    id=\"addAttach\"\n                                    accept=\"application/pdf\" \n                                    #addAttach \n                                    id=\"addAttachment\"\n                                    name=\"attachment\"\n                                    ngModel\n                                    >\n                            </div>\n                        </div>\n\n                    </div>\n                </div>\n\n                <label for=\"recomendation\" class=\"d-block mb-1\">Recomendation</label>\n                <textarea fullWidth nbInput name=\"recomendation\" id=\"recomendation\" rows=\"2\" [ngModel]=\"dialogData?.data?.recomendation\"></textarea>\n\n                <div class=\"d-flex justify-content-center\"> \n                    <button nbButton status=\"success\" type=\"submit\" class=\"m-1 w-100\" [disabled]=\"!addAssetsForm.form.valid\">Add Asset</button>\n                </div>\n            </form>\n        </nb-card-body>\n    </nb-card> \n</div>","import { Component, Injectable, OnInit, ViewChild } from '@angular/core';\nimport { PipingAssetsService } from './piping-assets.service';\nimport { NbDialogService, NbToastrService } from '@nebular/theme';\nimport { DeleteDialogComponent } from '../../../component/delete dialog/delete-dialog.component';\nimport { AddAssetsComponent } from './add-assets/add-assets.component';\nimport { MatTableComponent } from '../../../component/mat-table/mat-table.component';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n}) \n@Component({\n  selector: 'ngx-piping-assets',\n  templateUrl: './piping-assets.component.html',\n})\nexport class PipingAssetsComponent implements OnInit {\n  constructor(\n    private assetsService : PipingAssetsService,\n    private dialogService : NbDialogService,\n    private toastrService: NbToastrService\n  ) {}\n  \n  @ViewChild(MatTableComponent) viewTable : MatTableComponent;\n  private destroy$: Subject<void> = new Subject<void>();\n \n  ngOnInit(): void {\n    this.assetsService.getPipingAssets()\n    .subscribe(\n      ({data} : any)  => {\n        this.tableData = data\n        this.viewTable.regenerateTable(data)\n      },\n      () => this.toastrService.danger('Please check your connection and try again.', 'Your request failed.'),\n    )\n  }\n\n  tableData:any[]\n  columnDetails = [ \n    { type : 'select', prop : 'select', head : '', width : '20px' },\n    { type : 'text', prop : 'piping_id', head : 'Piping Id', width : '100px' },\n    { type : 'text', prop : 'piping_name', head : 'Piping Name', width : '200px' },\n    { type : 'text', prop : 'date_in_service', head : 'Date In Service', width : '200px' },\n    { type : 'text', prop : 'class', head : 'Class', width : '200px' },\n    { type : 'text', prop : 'tm_inspection_interval', head : 'TM Inspection Interval', width : '200px' },\n    { type : 'text', prop : 've_inspection_interval', head : 'VE Inspection Interval', width : '200px' },\n    { type : 'text', prop : 'notes', head : 'Notes', width : '200px' },\n    { type : 'button', prop : 'edit', width : '80px', button : [\n      { icon : 'edit-outline', status : 'info', title : \"edit-assets\" },\n      { icon : 'trash-2-outline', status : 'danger', title : \"delete-assets\" },\n    ]},\n  ]\n\n  onClickTable(data, title) {\n    if(title == 'delete-assets') this.deleteAsset(data)\n    if(title == 'edit-assets') this.editAsset(data)\n  }\n\n  addAssets() {\n    this.dialogService.open(AddAssetsComponent, {\n      context: {\n        dialogData : {  \n          title: 'Add Assets',\n        }\n      },\n    })\n    .onClose\n    .subscribe(newData => {\n      if(newData)\n      this.assetsService.addPipingAssets(newData)\n      .subscribe(\n        () => this.ngOnInit(),\n        () => this.toastrService.danger('Please check your connection and try again.', 'Your request failed.'),\n        () => this.toastrService.success('Data has been added.', 'Your request success.')\n        )\n    });\n  }\n\n  deleteAsset(data) {\n    this.dialogService.open(DeleteDialogComponent, {\n      context: {\n        dialogData : {\n          title : \"Delete Assets\",\n          name : data.piping_name,\n          id : data.id\n        }\n      },\n    })\n    .onClose\n    .subscribe(data => {\n      if(data)\n      this.assetsService.deletePipingAssets(data.id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => this.ngOnInit(),\n        () => this.toastrService.danger('Please check your connection and try again.', 'Your request failed.'),\n        () => this.toastrService.success('Data has been delete.', 'Your request success.')\n        )\n    });\n  }\n\n  editAsset(data) {\n    this.dialogService.open(AddAssetsComponent, {\n      context: {\n        dialogData : {  \n          title: 'Update Assets',\n          data : {\n            ...data,\n            date_in_service : new Date(data.date_in_service)\n          }\n        }\n      },\n    })\n    .onClose\n    .subscribe(newData => {\n      if(newData)\n      this.assetsService.updatePipingAssets({...data, ...newData})\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => this.ngOnInit(),\n        () => this.toastrService.danger('Please check your connection and try again.', 'Your request failed.'),\n        () => this.toastrService.success('Data has been delete.', 'Your request success.')\n        )\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<nb-card>\r\n    <nb-card-body>\r\n        <button \r\n            nbButton \r\n            outline\r\n            size=\"small\" \r\n            status=\"primary\"\r\n            class=\"m-2\"\r\n            *ngFor=\"let button of [\r\n                { name : 'New', icon : 'plus-outline' },\r\n                { name : 'Import', icon : 'download-outline' },\r\n                { name : 'Export', icon : 'upload-outline' },\r\n            ]\"\r\n            (click)=\"\r\n                    button.name == 'New'        ? addAssets()\r\n                :   button.name == 'Import'     ? import()\r\n                :   button.name == 'Export'     ? export()\r\n                :   button.name == 'Print'      ? print()\r\n                :   button.name == 'QR Print'   ? qrPrint()\r\n                :   null\r\n                    \"\r\n            >\r\n                <nb-icon [icon]=\"button.icon\" [pack]=\"button.pack ?? 'eva' \" class=\"m-1\"></nb-icon>\r\n                <span>{{ button.name }}</span>\r\n            </button>\r\n    </nb-card-body>\r\n</nb-card>\r\n\r\n<ngx-mat-table \r\n    [tableHeader]=\"{ title : 'Piping Assets', filter : 'Piping Id' }\"\r\n    [columnDetails]=\"columnDetails\"\r\n    [tableData]=\"tableData\"\r\n    (onClickTable)=\"onClickTable($event.data, $event.title)\"\r\n></ngx-mat-table>","import { Component, Input } from \"@angular/core\";\r\nimport { NbDialogRef } from \"@nebular/theme\";\r\nimport { PipingAssetsService } from \"../../piping-assets/piping-assets.service\";\r\n\r\n@Component({\r\n    selector: 'ngx-add-circuit',\r\n    templateUrl: './add-circuit.component.html',\r\n})\r\nexport class AddCircuitComponent {\r\n        \r\n    constructor(\r\n        private dialog: NbDialogRef<any>,\r\n        private assetsService : PipingAssetsService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.assetsService.getPipingAssets()\r\n        .subscribe(({data} : any) => {\r\n            this.piping = data;\r\n        })\r\n    }\r\n\r\n    @Input() dialogData;\r\n    piping\r\n    \r\n    imageLink = [\r\n        { src : \"https://wallpapercave.com/wp/wp6954364.jpg\", alt : \"Pipe 1\"},\r\n        { src : \"https://th.bing.com/th/id/OIP.AYvIW8-BF1Kfk1LvIq2WagAAAA?pid=ImgDet&w=400&h=400&rs=1\", alt : \"Pipe 2\"},\r\n        { src : \"https://th.bing.com/th/id/OIP.buLgFymST5kZJoEQjTQVxQHaE7?pid=ImgDet&rs=1\", alt : \"Pipe 3\"},\r\n    ]\r\n\r\n    closeDialog(arr = null) {\r\n        this.dialog.close(arr)\r\n    }\r\n}","<div class=\"d-flex justify-content-center align-items-center mt-4\">\r\n    <nb-card class=\"mt-5\">\r\n        <nb-card-header class=\"d-flex\">\r\n            <h5 class=\"w-100\">Add Circuit</h5>\r\n            <div class=\"flex-shrink-1\">\r\n                <button nbButton status=\"danger\" size=\"tiny\" (click)=\"closeDialog()\">\r\n                    <nb-icon icon=\"close-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>  \r\n            <form #addCircuitForm=\"ngForm\" (ngSubmit)=\"closeDialog(addCircuitForm.value)\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <label for=\"piping_circuit_id\" class=\"mb-1 d-block\">Piping Circuit Id</label>\r\n                        <input fullWidth nbInput fieldSize=\"small\" type=\"text\" id=\"piping_circuit_id\" name=\"piping_circuit_id\" ngModel>\r\n    \r\n                        <label for=\"piping_id\" class=\"mb-1 d-block\">Piping Id</label>\r\n\r\n                        <nb-select multiple placeholder=\"Multiple Select\" name=\"piping_id\" ngModel required>\r\n                        <nb-option \r\n                            [value]=\"pipe.id\" \r\n                            *ngFor=\"let pipe of piping\">{{ pipe.piping_id }}</nb-option>\r\n                        </nb-select>\r\n    \r\n                        <label for=\"piping_circuit_name\" class=\"mb-1 d-block\">Piping Circuit Name</label>\r\n                        <input fullWidth nbInput fieldSize=\"small\" type=\"text\" id=\"piping_circuit_name\" name=\"piping_circuit_name\" ngModel required>\r\n    \r\n                        <label for=\"dateInService\" class=\"mb-1 d-block\">Date In Service</label>\r\n                        <input fullWidth nbInput fieldSize=\"small\" [nbDatepicker]=\"datepicker\" name=\"date_in_service\" ngModel required> \r\n                        <nb-datepicker #datepicker></nb-datepicker>\r\n                    \r\n                        <label for=\"class\" class=\"mb-1 d-block\">Class</label>\r\n                        <input fullWidth nbInput fieldSize=\"small\" type=\"text\" id=\"class\" name=\"class\" ngModel required>\r\n                    \r\n                        <label for=\"notes\" class=\"mb-1 d-block\">Notes</label>\r\n                        <input fullWidth nbInput fieldSize=\"small\" type=\"text\" id=\"notes\" name=\"notes\" ngModel required>\r\n                    \r\n                    \r\n                        <label for=\"addAttach\" class=\"d-block mb-1\">Attachment</label>\r\n                        <input \r\n                            fullWidth \r\n                            fieldSize=\"tiny\"\r\n                            nbInput \r\n                            type=\"file\" \r\n                            id=\"addAttach\"\r\n                            accept=\"application/pdf\" \r\n                            #addAttach \r\n                            id=\"addAttachment\"\r\n                            name='attachment'\r\n                            ngModel\r\n                            >\r\n                    </div>\r\n                \r\n                    <div class=\"col-6 align-self-center\">\r\n                        <div id=\"carouselExampleInterval\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                            <div class=\"carousel-inner\">\r\n                              <div *ngFor=\"let image of imageLink; let i = index;\" class=\"carousel-item\" [ngClass]=\"i == 0 ? 'active' : ''\" data-bs-interval=\"10000\">\r\n                                <div class=\"overflow-hidden d-flex align-justify-center\" style=\"height: 13rem;\">\r\n                                    <img [src]=\"image.src\" class=\"w-100\" [alt]=\"image?.alt\" (click)=\"addImage.click()\">\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"prev\">\r\n                              <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                              <span class=\"visually-hidden\">Previous</span>\r\n                            </button>\r\n                            <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"next\">\r\n                              <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                              <span class=\"visually-hidden\">Next</span>\r\n                            </button>\r\n                            <input  \r\n                                fullWidth \r\n                                nbInput \r\n                                type=\"file\" \r\n                                style=\"display: none;\" \r\n                                accept=\"image/png, image/gif, image/jpeg\" \r\n                                #addImage \r\n                                id=\"addImage\"\r\n                            >\r\n                        </div>\r\n                    </div>\r\n        \r\n                    <div>\r\n                        <label for=\"recomendation\" class=\"d-block mb-1\">Recomendation</label>\r\n                        <textarea fullWidth nbInput name=\"recomendation\" id=\"recomendation\" rows=\"2\" name=\"recomendation\" ngModel\r\n                        required></textarea>\r\n                    </div>\r\n        \r\n                    <div class=\"d-flex justify-content-center\"> \r\n                        <button nbButton status=\"success\" type=\"submit\" class=\"m-1 w-100\" [disabled]=\"!addCircuitForm.form.valid\">Add Circuit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>","import { Component, Injectable, OnInit } from '@angular/core';\nimport { PipingCircuitService } from './piping-circuits.service';\nimport { NbDialogService } from '@nebular/theme';\nimport { AddCircuitComponent } from './add-circuit/add-circuit.component';\n\n@Injectable({\n  providedIn : 'root'\n})\n@Component({\n  selector: 'ngx-piping-circuits',\n  templateUrl: './piping-circuits.component.html',\n})\nexport class PipingCircuitsComponent implements OnInit {\n\n  constructor(\n    private circuitService : PipingCircuitService,\n    private dialogService : NbDialogService,\n\n  ) {}\n\n  ngOnInit(): void {\n    this.circuitService.getPipingCircuits()\n    .subscribe(({data} : any) => this.tableData = data)\n  }\n\n  tableData:any[];\n  columnDetails = [ \n    { type : 'select', prop : 'select', head : '', width : '20px' },\n    { type : 'text', prop : 'piping_circuit_id', head : 'Piping Circuit Id', width : '100px' },\n    { type : 'text', prop : 'piping_circuit_name', head : 'Piping Circuit Name', width : '200px' },\n    { type : 'text', prop : 'date_in_service', head : 'Date In Service', width : '200px' },\n    { type : 'text', prop : 'class', head : 'Class', width : '200px' },\n    { type : 'text', prop : 'notes', head : 'Notes', width : '200px' },\n  ]\n\n  addCircuit() {\n    this.dialogService.open(AddCircuitComponent, {\n      context: {\n        dialogData : 'hello'\n        // title: 'This is a title passed to the dialog component',\n      },\n    });\n  }\n\n}\n","<nb-card>\r\n    <nb-card-body>\r\n        <button \r\n            nbButton \r\n            outline\r\n            size=\"small\" \r\n            status=\"primary\"\r\n            class=\"m-2\"\r\n            *ngFor=\"let button of [\r\n                { name : 'New', icon : 'plus-outline' },\r\n                { name : 'Import', icon : 'download-outline' },\r\n                { name : 'Export', icon : 'upload-outline' },\r\n            ]\"\r\n            (click)=\"\r\n                    button.name == 'New'        ? addCircuit()\r\n                :   button.name == 'Import'     ? import()\r\n                :   button.name == 'Export'     ? export()\r\n                :   button.name == 'Print'      ? print()\r\n                :   button.name == 'QR Print'   ? qrPrint()\r\n                :   null\r\n                    \"\r\n            >\r\n                <nb-icon [icon]=\"button.icon\" [pack]=\"button.pack ?? 'eva' \" class=\"m-1\"></nb-icon>\r\n                <span>{{ button.name }}</span>\r\n            </button>\r\n    </nb-card-body>\r\n</nb-card>\r\n\r\n<ngx-mat-table \r\n    *ngIf=\"tableData\"\r\n    [tableHeader]=\"{ title : 'Piping Circuits', filter : 'Circuit Id' }\"\r\n    [columnDetails]=\"columnDetails\"\r\n    [tableData]=\"tableData\"\r\n></ngx-mat-table>","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\nexport class PipingCircuitService {\r\n    constructor(private httpClient : HttpClient) { }\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    getPipingCircuits() {\r\n        const url = this.apiUrl + \"/circuit\";\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    addPipingCircuits(data) {\r\n        const url = this.apiUrl + \"/assets\";\r\n        return this.httpClient.post(url, data);\r\n    }\r\n\r\n    updatePipingCircuits(data) {\r\n        const url = this.apiUrl + \"/assets\";\r\n        return this.httpClient.put(url, data);\r\n    }\r\n\r\n    deletePipingCircuits(id) {\r\n        const url = this.apiUrl + \"/assets/\" + id;\r\n        return this.httpClient.delete(url);\r\n    }\r\n}","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NbDialogRef, NbDialogService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-add-proposal',\r\n  templateUrl: './add-proposal.component.html',\r\n})\r\nexport class AddProposalComponent implements OnInit {\r\n\r\n  constructor(\r\n    private dialog: NbDialogRef<any>\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @Input() dialogData;\r\n\r\n  selectionCircuit = 0;\r\n  selectionPipe;\r\n  selectionTechnique\r\n  selectionMethod = 0;\r\n  inspectionType;\r\n  inspectionMethodList : any = [];\r\n  activeMethod\r\n  \r\n\r\n  selectCircuit(index) {\r\n    this.selectionPipe = null;\r\n    this.selectionCircuit = index; \r\n  }\r\n\r\n  selectPipe(index) {\r\n    this.selectionPipe = index; \r\n  }\r\n\r\n  selectTechnique(index, value) {\r\n    this.selectionTechnique = index;\r\n    this.inspectionMethodList[this.activeMethod][\"method\"] = \r\n    this.inspectionMethod[this.selectionMethod].name;\r\n    this.inspectionMethodList[this.activeMethod][\"technique\"] = value;\r\n  }\r\n\r\n  selectMethod(index) {\r\n    this.selectionTechnique = null;\r\n    this.selectionMethod = index;\r\n    this.inspectionMethodList[this.activeMethod][\"method\"] = \r\n    this.inspectionMethod[this.selectionMethod].name;\r\n  }\r\n\r\n  selectInspectionType(value) {\r\n    this.inspectionMethodList = this.inspectionMethodList.map(item => ({...item, active : false}))\r\n    this.inspectionMethodList.push({type : value, active : true})\r\n    this.activeMethod = this.inspectionMethodList.length - 1\r\n  }\r\n\r\n  activationMethod(index){\r\n    this.inspectionMethodList = this.inspectionMethodList.map(item => ({...item, active : false}))\r\n    this.inspectionMethodList[index].active = true; \r\n    this.activeMethod = index\r\n  }\r\n\r\n  inspectionMethod = [\r\n    {name : \"Acoustic Emission\", children : [\r\n      { name : \"Crack Detection\" },\r\n      { name : \"Leak Detection\" },\r\n    ]},\r\n    {name : \"Eddy Current\", children : [\r\n      { name : \"ACFM\" },\r\n      { name : \"Low Frequency\" },\r\n      { name : \"Pulsed\" },\r\n      { name : \"Remote Field\" },\r\n      { name : \"Standard (flat coil)\" },\r\n    ]},\r\n    {name : \"Magnetic\", children : [\r\n      { name : \"Magnetic Fluorescent Inspection\" },\r\n      { name : \"Magnetic Flux Leakage\" },\r\n      { name : \"Magnetic Particle Inspection\" },\r\n    ]},\r\n    {name : \"Metallurgical\", children : [\r\n      { name : \"Hardness Surveys\" },\r\n      { name : \"Microstructure Replication\" },\r\n    ]},\r\n    {name : \"Monitoring\", children : [\r\n      { name : \"On-line Monitoring\" }\r\n    ]},\r\n    {name : \"Penetrant\", children : [\r\n      { name : \"Liquid Penetrant Inspection\" },\r\n      { name : \"Penetrant Leak Inspection\" }\r\n    ]},\r\n    {name : \"Radiography\", children : [\r\n      { name : \"Compton Scatter\" },\r\n      { name : \"Gamma Radiography\" },\r\n      { name : \"Real-time Radiography\" },\r\n      { name : \"X-Radiography\" },\r\n    ]},\r\n    {name : \"Thermography\", children : [\r\n      { name : \"Passive Thermography\" },\r\n      { name : \"Transient Thermography\" },\r\n    ]},\r\n    {name : \"Ultrasonic\", children : [\r\n      { name : \"Advanced Ultrasonic Backscatter Technique\" },\r\n      { name : \"Angled Compression Wave\" },\r\n      { name : \"Angled Shear Wave\" },\r\n      { name : \"A-scan Thickness Survey\" },\r\n      { name : \"B-Scan\" },\r\n      { name : \"Chime\" },\r\n      { name : \"C-Scan\" },\r\n      { name : \"Digital Ultrasonic Thickness Gauge\" },\r\n      { name : \"Internal Rotational Inspection System\" },\r\n      { name : \"Lorus\" },\r\n      { name : \"Surface Waves\" },\r\n      { name : \"Teletest\" },\r\n      { name : \"TOFD\" },\r\n    ]},\r\n    {name : \"Visual\", children : [\r\n      { name : \"Endoscopy\" },\r\n      { name : \"Holiday Test\" },\r\n      { name : \"Hydrotesting\" },\r\n      { name : \"Naked Eye\" },\r\n      { name : \"Video\" },\r\n    ]},\r\n  ]\r\n\r\n  closeDialog(arr = null) {\r\n    this.dialog.close()\r\n    console.log(arr)\r\n  }\r\n\r\n}\r\n","<div class=\"w-100 d-flex justify-content-center mt-5\">\r\n    <nb-card class=\"mt-5\" style=\"max-height: 35rem; min-width: 80rem;\">\r\n        <nb-card-header class=\"d-flex\">\r\n            <h5 class=\"w-100\">Add Proposal</h5>\r\n            <div class=\"flex-shrink-1\">\r\n                <button nbButton status=\"danger\" size=\"tiny\" (click)=\"closeDialog()\">\r\n                    <nb-icon icon=\"close-outline\"></nb-icon>\r\n                </button>\r\n            </div>\r\n        </nb-card-header>\r\n        <nb-card-body>  \r\n            <form>\r\n                <h6>IN</h6>\r\n                <section class=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <label for=\"remarks\" class=\"d-block\">Remarks</label>\r\n                        <textarea nbInput name=\"\" id=\"inspection_summary\" rows=\"7\" fullWidth></textarea>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <div class=\"d-flex\">\r\n                            <div>\r\n                                <label for=\"dateInService\" class=\"mb-1 d-block\">Inspection Planned Date</label>\r\n                                <input fullWidth nbInput fieldSize=\"small\" [nbDatepicker]=\"inspection_planned_date\"> \r\n                                <nb-datepicker #inspection_planned_date></nb-datepicker>\r\n                            </div>\r\n            \r\n                            <div>\r\n                                <label for=\"dateInService\" class=\"mb-1 d-block\">Recomendation Date</label>\r\n                                <input fullWidth nbInput fieldSize=\"small\" [nbDatepicker]=\"recomendation_date\"> \r\n                                <nb-datepicker #recomendation_date></nb-datepicker>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <nb-card style=\"max-height: 10rem;\">\r\n                            <nb-card-body class=\"d-flex\">\r\n                                <div class=\"w-100\">\r\n                                    <span class=\"text-secondary\">Circuit ID</span>\r\n                                    <nb-list>\r\n                                        <nb-list-item *ngFor=\"let circuit of [1,2,3,4,5]; let index = index;\" style=\"max-height: .7rem;\">\r\n                                            <span\r\n                                            #circuitcell\r\n                                            style=\"cursor : pointer\"\r\n                                            [ngStyle]=\"{'color' : selectionCircuit == index ? '#0492c2' : 'black'}\"\r\n                                            (mouseover)=\"circuitcell.style.color = '#0492c2'\"\r\n                                            (mouseout)=\"\r\n                                            selectionCircuit == index\r\n                                            ? circuitcell.style.color = '#0492c2' \r\n                                            : circuitcell.style.color = 'black'\"\r\n                                            (click)=\"selectCircuit(index)\">\r\n                                                {{ circuit }}\r\n                                            </span>\r\n                                        </nb-list-item>\r\n                                    </nb-list>\r\n                                </div>\r\n                                <div class=\"w-100\">\r\n                                    <span class=\"text-secondary\">Piping ID</span>\r\n                                    <nb-list>\r\n                                        <nb-list-item *ngFor=\"let piping of [1,2,3]; let index = index;\" style=\"max-height: .7rem;\">\r\n                                            <span\r\n                                            #pipingcell\r\n                                            style=\"cursor : pointer\"\r\n                                            [ngStyle]=\"{'color' : selectionPipe == index ? '#0492c2' : 'black'}\"\r\n                                            (mouseover)=\"pipingcell.style.color = '#0492c2'\"\r\n                                            (mouseout)=\"\r\n                                            selectionPipe == index\r\n                                            ? pipingcell.style.color = '#0492c2' \r\n                                            : pipingcell.style.color = 'black'\"\r\n                                            (click)=\"selectPipe(index)\">\r\n                                                {{ piping }}\r\n                                            </span>\r\n                                        </nb-list-item>\r\n                                    </nb-list>\r\n                                </div>\r\n                            </nb-card-body>\r\n                        </nb-card>\r\n                    </div>\r\n                </section>\r\n\r\n                <h6>Inspection Method</h6>\r\n                <section class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field class=\"my-2\">\r\n                            <mat-label>Inspection Type</mat-label>\r\n                            <mat-select>\r\n                                <mat-option [value]=\"item\" *ngFor=\"let item of [\r\n                                    'Instrusive',\r\n                                    'Non Instrusive',\r\n                                ]\"\r\n                                (click)=\"selectInspectionType(item)\"\r\n                                >\r\n                                {{ item }}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"col-6 p-1\">\r\n                        <nb-card>\r\n                            <nb-card-body class=\"d-flex\">\r\n                                <div class=\"w-50\"> \r\n                                    <span class=\"text-secondary\">Inspection Method</span>\r\n                                    <nb-list>\r\n                                        <nb-list-item \r\n                                            *ngFor=\"let method of inspectionMethod; let index=index;\" \r\n                                            style=\"max-height: .7rem; cursor: pointer;\">\r\n                                            <span\r\n                                            #methodcell\r\n                                            style=\"cursor : pointer\"\r\n                                            [ngStyle]=\"{'color' : selectionMethod == index ? '#0492c2' : 'black'}\"\r\n                                            (mouseover)=\"methodcell.style.color = '#0492c2'\"\r\n                                            (mouseout)=\"\r\n                                            selectionMethod == index\r\n                                            ? methodcell.style.color = '#0492c2' \r\n                                            : methodcell.style.color = 'black'\"\r\n                                            (click)=\"selectMethod(index)\"\r\n                                            >\r\n                                                {{ method?.name }}\r\n                                            </span>\r\n                                        </nb-list-item>\r\n                                    </nb-list>\r\n                                </div>\r\n    \r\n                                <div class=\"w-100\">\r\n                                    <span class=\"text-secondary\">Inspection Technique</span>\r\n                                    <nb-list>\r\n                                        <nb-list-item \r\n                                            *ngFor=\"let technique of inspectionMethod[selectionMethod]?.children; let index = index;\" \r\n                                            style=\"max-height: .7rem;\"> \r\n                                            <span \r\n                                            #techniquecell\r\n                                            style=\"cursor : pointer\"\r\n                                            [ngStyle]=\"{'color' : selectionTechnique == index ? '#0492c2' : 'black'}\"\r\n                                            (mouseover)=\"techniquecell.style.color = '#0492c2'\"\r\n                                            (mouseout)=\"\r\n                                            selectionTechnique == index \r\n                                            ? techniquecell.style.color = '#0492c2' \r\n                                            : techniquecell.style.color = 'black'\"\r\n                                            (click)=\"selectTechnique(index, technique.name)\"\r\n                                            >\r\n                                                {{ technique?.name }}\r\n                                            </span>\r\n                                        </nb-list-item>\r\n                                    </nb-list>\r\n                                </div>\r\n                            </nb-card-body>\r\n                        </nb-card>\r\n                    </div>\r\n\r\n                    <div class=\"col-6 p-1\">\r\n                        <nb-card style=\"max-height: 24rem;\">\r\n                            <nb-list>\r\n                                <nb-list-item \r\n                                *ngFor=\"let method of inspectionMethodList; let index = index;\" \r\n                                style=\"cursor: pointer;\" \r\n                                class=\"w-100\"\r\n                                >\r\n                                    <div class=\"d-flex justify-content-between w-100 row\"> \r\n                                        <span class=\"col-1\"\r\n                                        (click)=\"activationMethod(index)\"\r\n                                        >\r\n                                            <div class=\"d-flex align-items-center\">\r\n                                                <span>\r\n                                                    {{ index + 1 }}\r\n                                                </span>\r\n                                                <nb-icon \r\n                                                [icon]=\" method?.active ? 'radio-button-on-outline' : 'radio-button-off-outline' \" \r\n                                                style=\"font-size: 20px;\" \r\n                                                class=\"align-self-center ms-2\"\r\n                                                [status]=\" method?.active ? 'success' : 'basic' \"\r\n                                                ></nb-icon>\r\n                                            </div>\r\n                                        </span>\r\n                                        <span class=\"col-3\">\r\n                                            {{ method?.type }}\r\n                                        </span>\r\n                                        <span class=\"col-3\" *ngIf=\"method?.method\">\r\n                                            + {{ method?.method }}\r\n                                        </span>\r\n                                        <span class=\"col-3\" *ngIf=\"method?.technique\">\r\n                                            + {{ method?.technique }}\r\n                                        </span>\r\n                                        <input type=\"number\" nbInput min=\"0\" max=\"100\" fieldSize=\"tiny\" class=\"col-2\">\r\n                                    </div>\r\n\r\n                                </nb-list-item>\r\n                              </nb-list>\r\n                        </nb-card>\r\n                    </div>\r\n                </section>\r\n\r\n                <button nbButton status=\"success\" size=\"small\" class=\"w-100\">Add Proposal</button>\r\n            </form>\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>","import { Component, Injectable, OnInit } from '@angular/core';\nimport { ViewProposalService } from './view-proposal.service';\nimport { NbDialogService } from '@nebular/theme';\nimport { AddProposalComponent } from './add-proposal/add-proposal.component';\n\n@Injectable({\n  providedIn : 'root'\n})\n@Component({\n  selector: 'ngx-view-proposal',\n  templateUrl: './view-proposal.component.html',\n})\nexport class ViewProposalComponent implements OnInit {\n  constructor(\n    private viewProposalService : ViewProposalService,\n    private dialogService : NbDialogService\n  ) {}\n\n  ngOnInit(): void {\n    this.viewProposalService.getProposals()\n    .subscribe(({data} : any) => {\n      this.tableData = data;\n    })\n  }\n\n  tableData:any[] = []\n  columnDetails = [ \n    { type : 'select', prop : 'select', head : '', width : '20px' },\n    { type : 'text', prop : 'proposal_id', head : 'Proposal ID', width : '100px' },\n    { type : 'text', prop : 'inspection_plan_date', head : 'Inspection Plan Date', width : '200px' },\n    { type : 'text', prop : 'piping_circuit', head : 'Piping/Piping Circuit', width : '200px' },\n    { type : 'text', prop : 'remarks', head : 'Remarks', width : '200px' },\n  ]\n\n  addProposal() {\n    this.dialogService.open(AddProposalComponent, {\n      context: {\n        dialogData : 'hello'\n        // title: 'This is a title passed to the dialog component',\n      },\n    });\n  }\n\n}\n","<nb-card>\r\n    <nb-card-body>\r\n        <button \r\n            nbButton \r\n            outline\r\n            size=\"small\" \r\n            status=\"primary\"\r\n            class=\"m-2\"\r\n            *ngFor=\"let button of [\r\n                { name : 'New', icon : 'plus-outline' },\r\n                { name : 'Import', icon : 'download-outline' },\r\n                { name : 'Export', icon : 'upload-outline' },\r\n            ]\"\r\n            (click)=\"\r\n                    button.name == 'New'        ? addAssets()\r\n                :   button.name == 'Import'     ? import()\r\n                :   button.name == 'Export'     ? export()\r\n                :   button.name == 'Print'      ? print()\r\n                :   button.name == 'QR Print'   ? qrPrint()\r\n                :   null\r\n                    \"\r\n            >\r\n                <nb-icon [icon]=\"button.icon\" [pack]=\"button.pack ?? 'eva' \" class=\"m-1\"></nb-icon>\r\n                <span>{{ button.name }}</span>\r\n            </button>\r\n    </nb-card-body>\r\n</nb-card>\r\n\r\n<ngx-mat-table \r\n    [tableHeader]=\"{ title : 'Proposal', filter : 'Proposal Id' }\"\r\n    [columnDetails]=\"columnDetails\"\r\n    [tableData]=\"tableData\"\r\n></ngx-mat-table>\r\n\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\nexport class ViewProposalService {\r\n    constructor(private httpClient : HttpClient) { }\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    getProposals() {\r\n        const url = this.apiUrl + \"/proposal\";\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    // addPipingCircuits(data) {\r\n    //     const url = this.apiUrl + \"/assets\";\r\n    //     return this.httpClient.post(url, data);\r\n    // }\r\n}"],"names":[],"sourceRoot":"webpack:///"}